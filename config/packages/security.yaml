security:
    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

#        api:
#            pattern: ^/api/
#            stateless: true
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator


        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: app_user_provider

            json_login:
                check_path: app_login
                username_path: email
                password_path: password

            logout:
                path: app_logout


    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#        - { path: ^/api/poems, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/login_check, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/profile, roles: [ ROLE_USER ] }
#        - { path: ^/api/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/doc, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
